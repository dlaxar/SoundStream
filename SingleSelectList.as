package  {	import flash.display.MovieClip;	import fl.containers.ScrollPane;	import flash.events.MouseEvent;	import fl.events.ScrollEvent;		public class SingleSelectList extends ScrollPane {		private var elements:Array;		private const WIDTH = 400;		private const HEIGHT = 50;				private var selected:int = -1;		private var container:View;				public function SingleSelectList(preferredWidth:int, preferredHeight:int, container:View) {			this.source = new MovieClip();			this.container = container;			this.setSize(preferredWidth, preferredHeight);			trace(this.getStyle("background"));						var newSkinClip:MovieClip = new MovieClip();			this.setStyle("skin", newSkinClip);			this.setStyle("upSkin", newSkinClip);						this.elements = new Array();			this.addEventListener(ScrollEvent.SCROLL, this.scrolling);		}				private function scrolling(e:ScrollEvent) {			trace("sc");			this.source.x = (this.horizontalScrollPosition * 400) / this.content.width;			this.source.y = (this.verticalScrollPosition * 400) / this.content.height;		}				public function addListElement(text:String, clickFunction:Function, selected:Boolean = false):int {			var i = this.elements.push(new ListElement(text, WIDTH, HEIGHT, this)) - 1;			this.elements[i].y = i * HEIGHT;			MovieClip(this.content).addChild(this.elements[i]);			(this.elements[i] as ListElement).callOnClick(clickFunction);			this.update();			return i;		}				private var i = 0;		public function select(index:uint) {			if(index >= this.elements.length || index < 0) return;			if(this.selected >= 0) this.elements[this.selected].unselect();			this.elements[index].select();			this.selected = index;					}				public function removeListElement(i:int, fromElements:Boolean = true):void {			MovieClip(this.content).removeChild(this.elements[i]);			if(fromElements) this.elements.splice(i, 1);					}				public function clear():void {			for(var i = 0; i < this.elements.length; i++) {				this.removeListElement(i, false);			}			this.elements = new Array();		}				public function getAudioPlayer() {			return this.container.getAudioPlayer();		}			}	}