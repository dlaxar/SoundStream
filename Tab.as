package  {	import flash.display.MovieClip;	import fl.transitions.Tween;	import fl.transitions.easing.None;	import fl.transitions.TweenEvent;	import flash.events.Event;		public class Tab extends MovieClip {		private var title:String;		private var h:int = -1;		private var preferredWidth:int;		private var preferredHeight:int;				public function Tab(title:String, preferredWidth:int, preferredHeight:int) {			this.title = title;			this.preferredWidth = preferredWidth;			this.preferredHeight = preferredHeight;		}				public function calculateHeight():int {			return this.height;		}				public function show(container:TabPanelContainer) {			if(this.h < 0) this.h = this.calculateHeight();			this.height = 0;			container.addChild(this);						var self = this;			trace("start tween");			new Tween(this, "height", None.easeIn, 0, Math.min(this.h, container.getMaxHeight()), 0.5, true).addEventListener(TweenEvent.MOTION_FINISH, function() {				self.dispatchEvent(new Event(ControlEvents.OPENED));				trace(self.height);				trace(self.calculateHeight());			});		}				public function hide(container:TabPanelContainer) {			var self = this;			if(this.height == 0) this.dispatchEvent(new Event(ControlEvents.CLOSED));			new Tween(this, "height", None.easeOut, this.height, 0, 0.5, true).addEventListener(TweenEvent.MOTION_FINISH, function(e:Event) {				(e.target as Tween).removeEventListener(TweenEvent.MOTION_FINISH, arguments.callee);				self.dispatchEvent(new Event(ControlEvents.CLOSED));				container.removeChild(self);				self.height = self.h;			});		}				public function getTitle() {			return this.title;		}				public function getPreferredHeight():int {			return this.preferredHeight;		}				public function getPreferredWidth():int {			return this.preferredWidth;		}				public function setTabHeight(h:int):void {			this.h = h;		}	}	}