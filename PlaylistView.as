package  {	import flash.display.MovieClip;	import flash.text.TextField;	import flash.media.Sound;	import flash.events.Event;		public class PlaylistView extends View {				private var text:TextField;				private var preferredWidth:int;		private var preferredHeight:int;				private var list:SingleSelectList;		private var playlist:Playlist;				public function PlaylistView(audio:AudioPlayer, preferredWidth:int, preferredHeight:int, song:Sound = null) {			super(audio);			this.preferredWidth = preferredWidth;			this.preferredHeight = preferredHeight;						this.list = new SingleSelectList(preferredWidth*2/3, preferredHeight, this);			this.list.x = preferredWidth/2 - this.list.width/2;			this.list.y = 10;						this.getAudioPlayer().addEventListener(AudioPlayerEvents.PLAYLIST_LOADED, newPlaylist);			this.getAudioPlayer().addEventListener(AudioPlayerEvents.NEXT, dataUpdated);			this.getAudioPlayer().addEventListener(AudioPlayerEvents.PREV, dataUpdated);						this.addChild(this.list);			this.list.update();		}				public function newPlaylist(e:Event) {			if(this.playlist != null) this.playlist.removeEventListener(PlaylistEvents.NEW_ID3_DATA, this.dataUpdated);			this.playlist = this.getAudioPlayer().getList();			this.playlist.addEventListener(PlaylistEvents.NEW_ID3_DATA, this.dataUpdated);			this.update(this.playlist);		}				public function dataUpdated(e:Event):void {			this.update(this.playlist);		}				private function update(list:Playlist):void {			this.list.clear();			var self = this;			for(var i = 0; i < list.trackCount; i++) {				this.list.addListElement(list.getID3Line(i), function(i) {					return function() {						var audio = (self as View).getAudioPlayer();						audio.setItemNumber(i);						audio.stop();						audio.play();						(self.list as SingleSelectList).select(i);					}				}(i));			}			this.list.select(this.getAudioPlayer().getItemNumber());		}	}	}