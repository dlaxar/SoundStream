package {		import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.geom.Rectangle;	import flash.display.DisplayObject;	import fl.motion.MotionEvent;	import flash.events.Event;	import flash.display.Sprite;	import flash.sampler.StackFrame;		public class Slider extends MovieClip {				private var d:Dragger;		private var h:int;		private var w:int;		private var maxValue:int;		private var minValue:int;				private var line:Sprite;				private var c:uint;				private var handler:Array;		public function Slider(w:int, h:int, minValue:int = 0, maxValue:int = 100) {			handler = new Array();						this.w = w;			this.h = h;						this.minValue = minValue;			this.maxValue = maxValue;						this.c = 0x000000;						draw();		}				public function draw():void {			//transparent background rect as anchor for the eventlistener			graphics.beginFill(0x0000FF, 0.0);			graphics.drawRect(0, 0, w, h);			graphics.endFill();						//the line			line = new Sprite();			line.graphics.lineStyle(2, c);			line.graphics.moveTo(0+2, h);			line.graphics.lineTo(w-2, h);			addChild(line);					d = new Dragger(h/2, h/2);			d.x = 0;			d.y = h;						d.addEventListener(MouseEvent.MOUSE_DOWN, dragStart);			d.addEventListener(MouseEvent.MOUSE_UP, dragStop);						addEventListener(MouseEvent.CLICK, function(e:MouseEvent) {				if(e.target is Slider) {					d.x = e.localX;					setValue(getValue());				}							});						addChild(d);		}				public function getValue():int {			return ((d.x/w)*(maxValue-minValue))+minValue;		}				public function dragStart(e:MouseEvent):void {			d.startDrag(true, new Rectangle(0, h, w, 0));			stage.addEventListener(MouseEvent.MOUSE_UP, dragStop);			addEventListener(Event.ENTER_FRAME, dragged);		}				public function dragStop(e:MouseEvent):void {			d.stopDrag();			dispatchChange();			stage.removeEventListener(MouseEvent.MOUSE_UP, dragStop);			removeEventListener(Event.ENTER_FRAME, dragged);		}				protected function dragged(e:Event):void {}				public function setValue(value:int):void {			if(value <=  maxValue && value >= minValue) {				d.x = ((value-minValue)/(maxValue-minValue))*w				dragged(null);			}			dispatchChange();		}				public function setColor(c:uint):void {			this.c = c;						removeChild(line);			line = new Sprite();			line.graphics.lineStyle(2, c);			line.graphics.moveTo(0, h);			line.graphics.lineTo(w, h);			addChild(line);		}				public function getSliderWidth():int {			return w;		}				public function getDragger():Dragger {			return d;		}				public function getMaxValue():int {			return maxValue;		}				public function getMinValue():int {			return minValue;		}				public function addChangeListener(f:Function) {			handler.push(f);		}				private function dispatchChange() {			for(var k:String in handler) {				handler[k]();			}		}	}	}